{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAGpCC,WAAWJ,EAASF,EAAO,CAAED,WAAUC,UAGvCM,WAAWH,EAAQH,EAAO,CAAED,WAAUC,S,IAK5CL,EAAKY,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBAEF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,QAC1BC,GAAcH,EAASI,IAAI,SAC3BC,GAAaL,EAASI,IAAI,QAC1BE,GAAUN,EAASI,IAAI,UAE7BrB,EAAAwB,OAAOC,KAAK,yBACZvB,EAAKwB,QAGL,IADA,IAAInB,EAAQa,EACHO,EAAI,EAAGA,GAAKJ,EAAQI,IAC3BtB,EAAcsB,EAAGpB,GACdqB,MAAK,SAAAC,G,OACJ7B,EAAAwB,OAAOM,QAAQ,qBAAyCC,OAApBF,EAAKvB,SAAS,QAAiByB,OAAXF,EAAKtB,MAAM,M,IAEpEyB,OAAM,SAAAH,G,OACL7B,EAAAwB,OAAOS,QAAQ,oBAAwCF,OAApBF,EAAKvB,SAAS,QAAiByB,OAAXF,EAAKtB,MAAM,M,IAEtEA,GAASe,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      setTimeout(resolve, delay, { position, delay });\n    } else {\n      // Reject\n      setTimeout(reject, delay, { position, delay });\n    }\n  });\n}\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(e.target);\n  const firstDelay = +formData.get('delay');\n  const delayStep = +formData.get('step');\n  const amount = +formData.get('amount');\n\n  Notify.info('Wait for the results!');\n  form.reset();\n\n  let delay = firstDelay;\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(data =>\n        Notify.success(`Fulfilled promise ${data.position} in ${data.delay}ms`)\n      )\n      .catch(data =>\n        Notify.failure(`Rejected promise ${data.position} in ${data.delay}ms`)\n      );\n    delay += delayStep;\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","addEventListener","e","preventDefault","formData","FormData","target","firstDelay","get","delayStep","amount","Notify","info","reset","i","then","data","success","concat","catch","failure"],"version":3,"file":"03-promises.313c1603.js.map"}